{"version":3,"sources":["components/TalentProfileUpload.js","App.js","index.js"],"names":["TalentProfileUpload","props","useState","csvFile","setCsvFile","headers","setHeaders","csvArray","setCsvArray","stepsObject","setStepsObject","main","a","readXlsxFile","rows","processCSV","slice","hdrs","newArray","map","row","eachObject","reduce","obj","header","i","value","trim","split","v","replace","name","imageUrl","objFinal","forEach","item","Object","keys","length","hasOwnProperty","newProd","filter","pr","Product","some","p","push","jr","includes","console","log","submit","formData","FormData","append","JSON","stringify","axios","post","process","resp","data","talentProfileUpload","id","className","sm","type","accept","onClick","e","onChange","target","files","preventDefault","style","padding","xs","bordered","striped","hover","h","index","it","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c1db6055.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport readXlsxFile from \"read-excel-file\";\nimport axios from \"axios\";\nimport { Table, Input, Container, Row, Col } from \"reactstrap\";\nexport default function TalentProfileUpload(props) {\n  // const { isheader, isSrNo, answerColumnIndex, headerProps } = props;\n  const [csvFile, setCsvFile] = useState();\n  const [headers, setHeaders] = useState([]);\n\n  const [csvArray, setCsvArray] = useState([]);\n  const [stepsObject, setStepsObject] = useState({});\n  // [{name: \"\", age: 0, rank: \"\"},{name: \"\", age: 0, rank: \"\"}]\n  const main = async () => {\n    const rows = await readXlsxFile(csvFile);\n    setHeaders(rows[0]);\n    processCSV(rows[0], rows.slice(1));\n  };\n\n  const processCSV = (hdrs, rows) => {\n    // let uniqJobs = [...moduleUniqueJobs];\n    const newArray = rows.map((row) => {\n      let module;\n      const eachObject = hdrs.reduce((obj = {}, header, i) => {\n        if (i <= 4) {\n          let value = row[i];\n          if (i === 2) {\n            module = value;\n          }\n          if (header.trim() === \"Job roles\") {\n            // let moduleObj = uniqJobs.find((item) => item.module === module);\n            value = value || \"\";\n            value = value.split(\",\");\n            value = value.map((v) => v.replace(\"\\t\", \"\").trim());\n            // const res = [];\n            // value.forEach((item) => {\n            //   if (!res.includes(item)) res.push(item);\n            // });\n            // value = res;\n          }\n          if (header === \"Product\") {\n            value = value.split(\",\");\n            value = value.map((v) => ({ name: v.trim(), imageUrl: '' }));\n          }\n          obj[header] = value;\n        }\n        return obj;\n      }, {});\n      return eachObject;\n    });\n\n    setCsvArray(newArray);\n    const objFinal = {};\n    newArray.forEach((item) => {\n\n      if (Object.keys(objFinal).length === 0 || !objFinal.hasOwnProperty([item[\"Role-Prefix and Product-Suffix\"]]))\n        objFinal[item[\"Role-Prefix and Product-Suffix\"]] = { [\"Primary Domain\"]: item[\"Primary Domain\"], Modules: { [item[\"Modules\"]]: { Product: item[\"Product\"], [\"Job roles\"]: item[\"Job roles\"] } } }\n      else {\n        objFinal[item[\"Role-Prefix and Product-Suffix\"]][\"Primary Domain\"] = item[\"Primary Domain\"]\n        if (Object.keys(objFinal[item[\"Role-Prefix and Product-Suffix\"]]).length === 0 || !objFinal[item[\"Role-Prefix and Product-Suffix\"]].hasOwnProperty(\"Modules\")) {\n          objFinal[item[\"Role-Prefix and Product-Suffix\"]][\"Modules\"] = { [item[\"Modules\"]]: { Product: item[\"Product\"], [\"Job roles\"]: item[\"Job roles\"] } }\n        } else {\n          if (!objFinal[item[\"Role-Prefix and Product-Suffix\"]][\"Modules\"].hasOwnProperty(item[\"Modules\"])) {\n            objFinal[item[\"Role-Prefix and Product-Suffix\"]][\"Modules\"][item[\"Modules\"]] = { Product: item[\"Product\"], [\"Job roles\"]: item[\"Job roles\"] }\n          } else {\n            const newProd = item[\"Product\"].filter(pr => objFinal[item[\"Role-Prefix and Product-Suffix\"]][\"Modules\"][item[\"Modules\"]].Product.some(p => p.name === pr.name))\n            objFinal[item[\"Role-Prefix and Product-Suffix\"]][\"Modules\"][item[\"Modules\"]].Product.push(newProd)\n\n            const newJobRoles = item[\"Job roles\"].filter(jr => objFinal[item[\"Role-Prefix and Product-Suffix\"]][\"Modules\"][item[\"Modules\"]][\"Job roles\"].includes(jr))\n          }\n        }\n\n      }\n    })\n    console.log(\"objFinal\", objFinal)\n    // objFinal = {};\n    // rows.forEach((row) => {\n    //   hdrs.forEach((header, i) => {\n    //     debugger;\n    //     if (i <= 4) {\n    //       if (i === 0) {\n    //         if (!objFinal[row[0]]) objFinal[row[0]] = {};\n    //       }\n    //       if (i === 1) {\n    //         if (\n    //           Object.keys(objFinal[row[0]]).length === 0\n    //           //  ||\n    //           // (objFinal[row[0]].keys && !objFinal[row[0]][row[1]])\n    //         ) {\n    //           objFinal[row[0]][row[1]] = {};\n    //         }\n    //       }\n    //       if (i === 2) {\n    //         if (objFinal[row[0]][row[1]]) {\n    //           if (\n    //             Object.keys(objFinal[row[0]][row[1]]).length === 0 ||\n    //             (objFinal[row[0]][row[1]].keys && !objFinal[row[0]][row[1]][row[2]])\n    //           ) {\n    //             objFinal[row[0]][row[1]][row[2]] = {};\n    //           }\n    //         }\n\n    //       }\n    //       if (header === \"Product\" && objFinal[row[0]][row[1]] && objFinal[row[0]][row[1]][row[2]]) {\n    //         let value = row[i];\n    //         value = value.split(\",\");\n    //         value = value.map((v) => ({ name: v.trim(), imageUrl: '' }));\n    //         debugger;\n    //         if (objFinal[row[0]][row[1]][row[2]])\n    //           objFinal[row[0]][row[1]][row[2]].Product = value;\n    //       }\n    //       if (header.trim() === \"Job roles\" && objFinal[row[0]][row[1]] && objFinal[row[0]][row[1]][row[2]]) {\n    //         let value = row[i] || \"\";\n    //         value = value.split(\",\");\n    //         value = value.map((v) => v.trim());\n    //         if (objFinal[row[0]][row[1]][row[2]]) objFinal[row[0]][row[1]][row[2]].Jobs = value;\n    //       }\n    //     }\n    //   });\n    // });\n    setStepsObject(objFinal);\n  };\n  console.log(\"csvArray\", csvArray);\n  // console.log(\"moduleUniqueJobs\", moduleUniqueJobs);\n  console.log(\"stepsObject\", stepsObject);\n  // console.log(\"sendArray\", sendArray);\n  const submit = async () => {\n    const formData = new FormData();\n    formData.append(\"talentProfileFile\", csvFile);\n    formData.append(\"steps\", JSON.stringify(stepsObject));\n    try {\n      const resp = await axios.post(\n        `${process.env.REACT_APP_SERVER_URL}/api/talentProfile/setTalentProfileSteps`,\n        formData\n      );\n      console.log(\"file upload\", resp.data.talentProfileUpload);\n    } catch { }\n  };\n  const upload = () => {\n    main();\n  };\n  return (\n    <>\n      <form id=\"csv-form\" className=\"col-xs-9\">\n        <Container className=\"mt-5\">\n          <Row className=\"justify-content-center mb-3\">\n            <Col sm={10}>\n              <Input\n                name=\"file\"\n                type=\"file\"\n                accept=\".xlsx\"\n                id=\"csvFile\"\n                onClick={(e) => {\n                  setCsvArray([]);\n                }}\n                onChange={(e) => {\n                  setCsvFile(e.target.files[0]);\n                }}\n              />\n              {/* <input\n        type=\"file\"\n      ></input> */}\n              {/* <br /> */}\n            </Col>\n            <Col sm={\"auto\"} className=\"p-0\">\n              <button\n                onClick={(e) => {\n                  e.preventDefault();\n                  if (csvFile) upload();\n                }}\n                style={{ padding: \"5px\" }}\n              >\n                Upload Excel\n              </button>\n            </Col>\n          </Row>\n          {csvArray.length > 0 && (\n            <Row className=\"justify-content-center mb-3\">\n              <Col xs={1}>\n                <button\n                  onClick={(e) => {\n                    e.preventDefault();\n                    submit();\n                  }}\n                  style={{ padding: \"5px\" }}\n                >\n                  Submit\n                </button>\n              </Col>\n            </Row>\n          )}\n        </Container>\n      </form>\n      <br />\n      <br />\n      {csvArray.length > 0 ? (\n        <>\n          <Table bordered striped hover>\n            <thead>\n              <tr className=\"question-header\">\n                {headers.map((h, index) => {\n                  return <th key={index}>{h}</th>;\n                })}\n              </tr>\n            </thead>\n            <tbody>\n              {csvArray.map((item, i) => {\n                return (\n                  <tr key={i}>\n                    {headers.map((h, index) => {\n                      // if (index === 0)\n                      //   return (\n                      //     <td className=\"question-first-col\" key={index}>\n                      //       {item[headers[index]]}\n                      //     </td>\n                      //   );\n                      return index <= 4 ? (\n                        h === \"Product\" ? <td>{item[headers[index]].map(it => it.name)}</td> :\n                          <td>{item[headers[index]]}</td>\n                      ) : null;\n                    })}\n                  </tr>\n                );\n              })}\n            </tbody>\n          </Table>\n        </>\n      ) : null}\n    </>\n  );\n}\n","import QuestionAnswersCSVUpload from \"./components/QuestionAnswersCSVUpload\";\nimport TalentProfileUpload from \"./components/TalentProfileUpload\";\nimport \"./App.css\";\nconsole.log(\"REACT_APP_SERVER_URL\", process.env.REACT_APP_SERVER_URL);\nfunction App() {\n  return (\n    <div className=\"App\">\n      <TalentProfileUpload />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}