{"version":3,"sources":["components/QuestionAnswersCSVUpload.js","components/TalentProfileUpload.js","components/EmployerProfileUpload.js","components/Navigation.js","App.js","index.js"],"names":["CSVReader","props","useState","csvFile","setCsvFile","headers","setHeaders","csvArray","setCsvArray","tagsList","setTagsList","tags","setTags","mainTags","setMainTags","reactTags","useRef","main","a","readXlsxFile","rows","opt","forEach","el","toLowerCase","includes","push","replace","processCSV","slice","onDelete","useCallback","i","tagIndex","prevTags","filter","_","onAddition","newTag","prevTagsList","some","s","name","length","onDeleteMain","onAdditionMain","hdrs","newArray","map","row","qnsOptions","eachObject","reduce","obj","header","value","split","v","trim","single","answers","qns","option","answer","Answers","questionAnswers","tagsArr","item","index","Tags","tagsArray","it","id","tagsSuggestionsArr","t","submit","certRelated","Domain","Product","productSpecific","questionMode","questionType","type","Type","skillLevel","sourceCode","sourceType","comments","arrayToStore","question","certRelatedRow","DomainRow","ProductRow","Nos","productSpecificRow","questionModeRow","questionTypeRow","typeRow","skillLevelRow","sourceCodeRow","sourceTypeRow","commentsRow","rest","qnsToSave","domain","product","fileName","Question","optionsWithAnswers","console","log","qnsAns","formData","FormData","append","axios","post","process","response","data","qnsUpload","status","fileUploadId","_id","questions","resp","giveAnswers","isSingle","markup","onRadioChange","e","currCsvArr","currentIndexQnsAns","curr","target","onCheckedChange","ech","check","ans","checked","onChange","className","sm","accept","onClick","files","preventDefault","style","padding","ref","minQueryLength","allowNew","suggestions","xs","bordered","striped","hover","h","bind","TalentProfileUpload","stepsObject","setStepsObject","imageUrl","objFinal","Object","keys","hasOwnProperty","newProd","pr","p","jr","JSON","stringify","talentProfileUpload","EmployerProfileUpload","primaryDomain","module","jobRoles","jobrol","EmployerSteps","Navigation","activeStyle","textDecoration","color","fontWeight","inactiveStyle","to","isActive","App","path","element","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.03de37d4.chunk.js","sourcesContent":["import { useRef, useState, useCallback } from \"react\";\nimport readXlsxFile from \"read-excel-file\";\nimport ReactTags from \"react-tag-autocomplete\";\nimport axios from \"axios\";\nimport {\n  Table,\n  Input,\n  Container,\n  Row,\n  Col,\n  FormGroup,\n  Label,\n} from \"reactstrap\";\nexport default function CSVReader(props) {\n  // const { isheader, isSrNo, answerColumnIndex, headerProps } = props;\n  const [csvFile, setCsvFile] = useState();\n  const [headers, setHeaders] = useState([]);\n  const [csvArray, setCsvArray] = useState([]);\n  // const [options, setOptions] = useState([]);\n  const [tagsList, setTagsList] = useState([]);\n  const [tags, setTags] = useState();\n  const [mainTags, setMainTags] = useState();\n  const reactTags = useRef();\n  // [{name: \"\", age: 0, rank: \"\"},{name: \"\", age: 0, rank: \"\"}]\n  const main = async () => {\n    const rows = await readXlsxFile(csvFile);\n    // console.log(\"** Done **\", rows);\n    setHeaders(rows[0]);\n    const opt = [];\n    rows[0].forEach((el) => {\n      el = el || \"\";\n      if (el.toLowerCase().includes(\"option \")) {\n        opt.push(el.toLowerCase().replace(\"option \", \"\").toLowerCase());\n      }\n    });\n    // setOptions(opt);\n    processCSV(rows[0], rows.slice(1));\n  };\n  const onDelete = useCallback(\n    (i, tagIndex) => {\n      const prevTags = tags ? { ...tags } : {};\n      prevTags[i] = prevTags[i].filter((_, i) => i !== tagIndex);\n      setTags(prevTags);\n    },\n    [tags]\n  );\n\n  const onAddition = useCallback(\n    (i, newTag) => {\n      const prevTags = tags ? { ...tags } : {};\n      const prevTagsList = [...tagsList];\n      if (\n        !prevTagsList.some(\n          (s) => s.name.toLowerCase() === newTag.name.toLowerCase()\n        )\n      ) {\n        prevTagsList[prevTagsList.length] = newTag;\n        setTagsList(prevTagsList);\n      }\n      if (\n        prevTags[i].some(\n          (s) => s.name.toLowerCase() === newTag.name.toLowerCase()\n        )\n      )\n        return;\n      prevTags[i] = [...prevTags[i], newTag];\n      setTags(prevTags);\n    },\n    [tags, tagsList]\n  );\n  const onDeleteMain = useCallback(\n    (tagIndex) => {\n      let prevTags = mainTags ? [...mainTags] : [];\n      prevTags = prevTags.filter((_, i) => i !== tagIndex);\n      setMainTags(prevTags);\n    },\n    [mainTags]\n  );\n\n  const onAdditionMain = useCallback(\n    (newTag) => {\n      let prevTags = mainTags ? [...mainTags] : [];\n      const prevTagsList = [...tagsList];\n      if (\n        !prevTagsList.some(\n          (s) => s.name.toLowerCase() === newTag.name.toLowerCase()\n        )\n      ) {\n        prevTagsList[prevTagsList.length] = newTag;\n        setTagsList(prevTagsList);\n      }\n      if (\n        prevTags.some((s) => s.name.toLowerCase() === newTag.name.toLowerCase())\n      )\n        return;\n      prevTags = [...prevTags, newTag];\n      setMainTags(prevTags);\n    },\n    [mainTags, tagsList]\n  );\n  const processCSV = (hdrs, rows) => {\n    const newArray = rows.map((row) => {\n      const qnsOptions = [];\n      const eachObject = hdrs.reduce((obj = {}, header, i) => {\n        let value = row[i];\n        if (header === \"Answers\") {\n          value = value.split(\",\");\n          value = value.map((v) => v.trim());\n          obj.single = value.length === 1;\n        }\n        if (header === \"Tags\" && value) {\n          value = value.split(\",\");\n          value = value.map((v) => v.trim());\n        }\n        if (header.toLowerCase().includes(\"option\") && value) {\n          qnsOptions.push(header.toLowerCase().replace(\"option \", \"\"));\n        }\n        obj[header] = value;\n\n        // obj[header] = values[i].slice(0, values[i].indexOf(\"\\r\"));\n        return obj;\n      }, {});\n      const answers = qnsOptions.map((qns) => {\n        return {\n          option: qns,\n          answer: eachObject.Answers.some((a) => a === qns),\n        };\n      });\n      eachObject.questionAnswers = answers;\n      return eachObject;\n    });\n    setCsvArray(newArray);\n    const tagsArr = {};\n    newArray.forEach((item, index) => {\n      if (item && item.Tags) {\n        const tagsArray = item.Tags.map((it, i) => {\n          return { id: i, name: it };\n        });\n        tagsArr[index] = tagsArray;\n      } else {\n        tagsArr[index] = [];\n      }\n    });\n    const tagsSuggestionsArr = [];\n    newArray.forEach((item, index) => {\n      if (item.Tags && item.Tags.length > 0) {\n        item.Tags.forEach((t) => {\n          if (!tagsSuggestionsArr.some((it) => it.name === t)) {\n            tagsSuggestionsArr.push({ id: tagsSuggestionsArr.length, name: t });\n          }\n        });\n      }\n    });\n    setTagsList(tagsSuggestionsArr);\n    setMainTags(tagsSuggestionsArr);\n    setTags(tagsArr);\n  };\n  // console.log(\"tagsList\", tagsList);\n  // console.log(\"tags\", tags);\n  const submit = async () => {\n    const {\n      \"Cert related\": certRelated,\n      Domain,\n      // \"File name\": fileName,\n      // \"Module (specific)\": moduleSpecific,\n      // \"No of Questions?\": noOfQuestions,\n      // Nos,\n      Product,\n      \"Product specific\": productSpecific,\n      \"Question Mode\": questionMode,\n      \"Question Type\": questionType,\n      Type: type,\n      \"Skill Level\": skillLevel,\n      \"Source code\": sourceCode,\n      \"Source type\": sourceType,\n      comments,\n    } = csvArray[0];\n    const arrayToStore = csvArray.slice(1).map((question) => {\n      const {\n        \"Cert related\": certRelatedRow,\n        Domain: DomainRow,\n        \"File name\": fileNameRow,\n        \"Module (specific)\": moduleSpecificRow,\n        \"No of Questions?\": noOfQuestionsRow,\n        Nos: NosRow,\n        Product: ProductRow,\n        \"Product specific\": productSpecificRow,\n        \"Question Mode\": questionModeRow,\n        \"Question Type\": questionTypeRow,\n        Type: typeRow,\n        \"Skill Level\": skillLevelRow,\n        \"Source code\": sourceCodeRow,\n        \"Source type\": sourceTypeRow,\n        questionAnswers,\n        commentsRow,\n        ...rest\n      } = question;\n      const qnsToSave = { ...rest };\n      qnsToSave.certRelated = certRelatedRow;\n      qnsToSave.domain = DomainRow;\n      qnsToSave.product = ProductRow;\n      qnsToSave.fileName = csvFile.name;\n      qnsToSave.productSpecific = productSpecificRow;\n      qnsToSave.questionMode = questionModeRow;\n      qnsToSave.questionType = questionTypeRow;\n      qnsToSave.type = typeRow;\n      qnsToSave.skillLevel = skillLevelRow;\n      qnsToSave.sourceCode = sourceCodeRow;\n      qnsToSave.sourceType = sourceTypeRow;\n      qnsToSave.comments = commentsRow;\n      qnsToSave.question = qnsToSave.Question;\n      const optionsWithAnswers = [];\n      console.log(\"qnsToSave\", qnsToSave);\n      questionAnswers.forEach((qnsAns) => {\n        if (`Option ${qnsAns.option}` in qnsToSave) {\n          optionsWithAnswers.push({\n            option: qnsToSave[`Option ${qnsAns.option}`],\n            answer: qnsAns.answer,\n          });\n        }\n      });\n      qnsToSave.optionsWithAnswers = optionsWithAnswers;\n      return qnsToSave;\n    });\n    console.log(\"arrayToStore\", arrayToStore);\n    // eachObject.tags = mainTags.map((t) => t.name);\n\n    const formData = new FormData();\n    formData.append(\"questionFile\", csvFile);\n    debugger;\n    mainTags.forEach((t) => {\n      formData.append(\"tags\", t.name);\n    });\n    formData.append(\"certRelated\", certRelated);\n    formData.append(\"domain\", Domain);\n    formData.append(\"noOfQuestions\", arrayToStore.length);\n    formData.append(\"product\", Product);\n    formData.append(\"productSpecific\", productSpecific);\n    formData.append(\"questionMode\", questionMode);\n\n    formData.append(\"questionType\", questionType);\n    formData.append(\"skillLevel\", skillLevel);\n    formData.append(\"sourceCode\", sourceCode);\n    formData.append(\"type\", type);\n    formData.append(\"sourceType\", sourceType);\n    formData.append(\"comments\", comments);\n    try {\n      const response = await axios.post(\n        `${process.env.REACT_APP_SERVER_URL}/api/questions/upload`,\n        formData\n      );\n      console.log(\"file upload\", response.data.qnsUpload);\n      if (response.data.status) {\n        const data = arrayToStore.map((item) => {\n          console.log(\"item\", item);\n          return {\n            question: item.Question,\n            optionsWithAnswers: item.optionsWithAnswers || [],\n            single: item.single,\n            fileName: item.fileName,\n            tags: item.Tags || [],\n            domain: item.domain,\n            product: item.product,\n            productSpecific: item.productSpecific,\n            questionMode: item.questionMode,\n            questionType: item.questionType,\n            type: item.type,\n            skillLevel: item.skillLevel,\n            sourceCode: item.sourceCode,\n            sourceType: item.sourceType,\n            comments: item.comments,\n            fileUploadId: response.data.qnsUpload._id,\n          };\n        });\n        console.log(\"data\", data);\n        const resp = await axios.post(\n          `${process.env.REACT_APP_SERVER_URL}/api/questions/setQuestions`,\n          { questions: data }\n        );\n        console.log(\"questions\", resp.data.questions);\n      }\n    } catch {}\n  };\n  const upload = () => {\n    main();\n    // const file = csvFile;\n    // const reader = new FileReader();\n\n    // reader.onload = function (e) {\n    //   const text = e.target.result;\n    //   console.log(text);\n    //   processCSV(text, \";\");\n    // };\n\n    // reader.readAsText(file);\n  };\n  // console.log(headers);\n  // console.log(\"csvArray\", csvArray);\n  // console.log(csvArray.length > 0);\n  // console.log(\"options\", options);\n  const giveAnswers = (index, isSingle, questionAnswers) => {\n    const onRadioChange = (e) => {\n      debugger;\n      const currCsvArr = [...csvArray];\n      let currentIndexQnsAns = [...currCsvArr[index].questionAnswers];\n      currentIndexQnsAns = currentIndexQnsAns.map((curr) => {\n        if (curr.option === e.target.value) {\n          curr.answer = true;\n        } else {\n          curr.answer = false;\n        }\n        return curr;\n      });\n      currCsvArr[index].questionAnswers = currentIndexQnsAns;\n      setCsvArray(currCsvArr);\n    };\n    const onCheckedChange = (e) => {\n      debugger;\n      const currCsvArr = [...csvArray];\n      let currentIndexQnsAns = [...currCsvArr[index].questionAnswers];\n      currentIndexQnsAns = currentIndexQnsAns.map((ech) => {\n        if (ech.option === e.target.value) ech.answer = !ech.answer;\n        return ech;\n      });\n      currCsvArr[index].questionAnswers = currentIndexQnsAns;\n      setCsvArray(currCsvArr);\n    };\n    let markup;\n    if (isSingle) {\n      markup = (\n        <FormGroup check>\n          <Container>\n            <Row>\n              {questionAnswers.map((ans, index) => {\n                return (\n                  <Col key={index}>\n                    <Input\n                      type=\"radio\"\n                      name={`radio${index}`}\n                      checked={ans.answer}\n                      value={ans.option}\n                      onChange={onRadioChange}\n                    />\n                    <Label check>{ans.option}</Label>\n                  </Col>\n                );\n              })}\n            </Row>\n          </Container>\n        </FormGroup>\n      );\n    } else {\n      markup = (\n        <Container>\n          <Row>\n            <Col>\n              {questionAnswers.map((ans, i) => {\n                return (\n                  <FormGroup check key={i}>\n                    <Input\n                      type=\"checkbox\"\n                      checked={ans.answer}\n                      value={ans.option}\n                      onChange={onCheckedChange}\n                    />\n                    <Label check>{ans.option}</Label>\n                  </FormGroup>\n                );\n              })}\n            </Col>\n          </Row>\n        </Container>\n      );\n    }\n    return markup;\n  };\n  return (\n    <>\n      <form id=\"csv-form\" className=\"col-xs-9\">\n        <Container className=\"mt-5\">\n          <Row className=\"justify-content-center mb-3\">\n            <Col sm={10}>\n              <Input\n                name=\"file\"\n                type=\"file\"\n                accept=\".xlsx\"\n                id=\"csvFile\"\n                onClick={(e) => {\n                  setCsvArray([]);\n                  setMainTags([]);\n                }}\n                onChange={(e) => {\n                  setCsvFile(e.target.files[0]);\n                }}\n              />\n              {/* <input\n        type=\"file\"\n      ></input> */}\n              {/* <br /> */}\n            </Col>\n            <Col sm={\"auto\"} className=\"p-0\">\n              <button\n                onClick={(e) => {\n                  e.preventDefault();\n                  if (csvFile) upload();\n                }}\n                style={{ padding: \"5px\" }}\n              >\n                Upload Excel\n              </button>\n            </Col>\n          </Row>\n          {tagsList && tagsList.length > 0 && (\n            <Row className=\"justify-content-center mb-3\">\n              <ReactTags\n                ref={reactTags}\n                minQueryLength={1}\n                tags={mainTags ? mainTags : []}\n                allowNew\n                suggestions={tagsList || []}\n                onDelete={onDeleteMain}\n                onAddition={onAdditionMain}\n              />\n            </Row>\n          )}\n          {csvArray.length > 0 && (\n            <Row className=\"justify-content-center mb-3\">\n              <Col xs={1}>\n                <button\n                  onClick={(e) => {\n                    e.preventDefault();\n                    submit();\n                  }}\n                  style={{ padding: \"5px\" }}\n                >\n                  Submit\n                </button>\n              </Col>\n            </Row>\n          )}\n        </Container>\n      </form>\n      <br />\n      <br />\n      {csvArray.length > 0 ? (\n        <>\n          <Table bordered striped hover>\n            <thead>\n              <tr className=\"question-header\">\n                {headers.map((h, index) => {\n                  return <th key={index}>{h}</th>;\n                })}\n              </tr>\n            </thead>\n            <tbody>\n              {csvArray.map((item, i) => {\n                return (\n                  <tr key={i}>\n                    {headers.map((h, index) => {\n                      if (index === 0)\n                        return (\n                          <td className=\"question-first-col\" key={index}>\n                            {item[headers[index]]}\n                          </td>\n                        );\n                      if (h === \"Tags\") {\n                        return (\n                          <td>\n                            <ReactTags\n                              ref={reactTags}\n                              minQueryLength={1}\n                              tags={tags ? tags[i] : []}\n                              allowNew\n                              key={index}\n                              suggestions={tagsList || []}\n                              onDelete={onDelete.bind(null, i)}\n                              onAddition={onAddition.bind(null, i)}\n                            />\n                          </td>\n                        );\n                      } else if (h === \"Answers\") {\n                        return (\n                          <td>\n                            {giveAnswers(i, item.single, item.questionAnswers)}\n                          </td>\n                        );\n                      } else return <td>{item[headers[index]]}</td>;\n                    })}\n                  </tr>\n                );\n              })}\n            </tbody>\n          </Table>\n        </>\n      ) : null}\n    </>\n  );\n}\n","import { useState } from \"react\";\nimport readXlsxFile from \"read-excel-file\";\nimport axios from \"axios\";\nimport { Table, Input, Container, Row, Col } from \"reactstrap\";\nexport default function TalentProfileUpload(props) {\n  // const { isheader, isSrNo, answerColumnIndex, headerProps } = props;\n  const [csvFile, setCsvFile] = useState();\n  const [headers, setHeaders] = useState([]);\n\n  const [csvArray, setCsvArray] = useState([]);\n  const [stepsObject, setStepsObject] = useState({});\n  // [{name: \"\", age: 0, rank: \"\"},{name: \"\", age: 0, rank: \"\"}]\n  const main = async () => {\n    const rows = await readXlsxFile(csvFile);\n    setHeaders(rows[0]);\n    processCSV(rows[0], rows.slice(1));\n  };\n\n  const processCSV = (hdrs, rows) => {\n    // let uniqJobs = [...moduleUniqueJobs];\n    const newArray = rows.map((row) => {\n      let module;\n      const eachObject = hdrs.reduce((obj = {}, header, i) => {\n        if (i <= 4) {\n          let value = row[i];\n          if (i === 2) {\n            module = value;\n          }\n          if (header.trim() === \"Job roles\") {\n            // let moduleObj = uniqJobs.find((item) => item.module === module);\n            value = value || \"\";\n            value = value.split(\",\");\n            value = value.map((v) => v.replace(\"\\t\", \"\").trim());\n            // const res = [];\n            // value.forEach((item) => {\n            //   if (!res.includes(item)) res.push(item);\n            // });\n            // value = res;\n          }\n          if (header === \"Product\") {\n            value = value.split(\",\");\n            value = value.map((v) => ({ name: v.trim(), imageUrl: '' }));\n          }\n          obj[header] = value;\n        }\n        return obj;\n      }, {});\n      return eachObject;\n    });\n\n    setCsvArray(newArray);\n    const objFinal = {};\n    newArray.forEach((item) => {\n\n      if (Object.keys(objFinal).length === 0 || !objFinal.hasOwnProperty([item[\"Role-Prefix and Product-Suffix\"]]))\n        objFinal[item[\"Role-Prefix and Product-Suffix\"]] = { [\"Primary Domain\"]: item[\"Primary Domain\"], Modules: { [item[\"Modules\"]]: { Product: item[\"Product\"], [\"Job roles\"]: item[\"Job roles\"] } } }\n      else {\n        objFinal[item[\"Role-Prefix and Product-Suffix\"]][\"Primary Domain\"] = item[\"Primary Domain\"]\n        if (Object.keys(objFinal[item[\"Role-Prefix and Product-Suffix\"]]).length === 0 || !objFinal[item[\"Role-Prefix and Product-Suffix\"]].hasOwnProperty(\"Modules\")) {\n          objFinal[item[\"Role-Prefix and Product-Suffix\"]][\"Modules\"] = { [item[\"Modules\"]]: { Product: item[\"Product\"], [\"Job roles\"]: item[\"Job roles\"] } }\n        } else {\n          if (!objFinal[item[\"Role-Prefix and Product-Suffix\"]][\"Modules\"].hasOwnProperty(item[\"Modules\"])) {\n            objFinal[item[\"Role-Prefix and Product-Suffix\"]][\"Modules\"][item[\"Modules\"]] = { Product: item[\"Product\"], [\"Job roles\"]: item[\"Job roles\"] }\n          } else {\n            const newProd = item[\"Product\"].filter(pr => objFinal[item[\"Role-Prefix and Product-Suffix\"]][\"Modules\"][item[\"Modules\"]].Product.some(p => p.name === pr.name))\n            objFinal[item[\"Role-Prefix and Product-Suffix\"]][\"Modules\"][item[\"Modules\"]].Product.push(newProd)\n\n            const newJobRoles = item[\"Job roles\"].filter(jr => objFinal[item[\"Role-Prefix and Product-Suffix\"]][\"Modules\"][item[\"Modules\"]][\"Job roles\"].includes(jr))\n          }\n        }\n\n      }\n    })\n    console.log(\"objFinal\", objFinal)\n    // objFinal = {};\n    // rows.forEach((row) => {\n    //   hdrs.forEach((header, i) => {\n    //     debugger;\n    //     if (i <= 4) {\n    //       if (i === 0) {\n    //         if (!objFinal[row[0]]) objFinal[row[0]] = {};\n    //       }\n    //       if (i === 1) {\n    //         if (\n    //           Object.keys(objFinal[row[0]]).length === 0\n    //           //  ||\n    //           // (objFinal[row[0]].keys && !objFinal[row[0]][row[1]])\n    //         ) {\n    //           objFinal[row[0]][row[1]] = {};\n    //         }\n    //       }\n    //       if (i === 2) {\n    //         if (objFinal[row[0]][row[1]]) {\n    //           if (\n    //             Object.keys(objFinal[row[0]][row[1]]).length === 0 ||\n    //             (objFinal[row[0]][row[1]].keys && !objFinal[row[0]][row[1]][row[2]])\n    //           ) {\n    //             objFinal[row[0]][row[1]][row[2]] = {};\n    //           }\n    //         }\n\n    //       }\n    //       if (header === \"Product\" && objFinal[row[0]][row[1]] && objFinal[row[0]][row[1]][row[2]]) {\n    //         let value = row[i];\n    //         value = value.split(\",\");\n    //         value = value.map((v) => ({ name: v.trim(), imageUrl: '' }));\n    //         debugger;\n    //         if (objFinal[row[0]][row[1]][row[2]])\n    //           objFinal[row[0]][row[1]][row[2]].Product = value;\n    //       }\n    //       if (header.trim() === \"Job roles\" && objFinal[row[0]][row[1]] && objFinal[row[0]][row[1]][row[2]]) {\n    //         let value = row[i] || \"\";\n    //         value = value.split(\",\");\n    //         value = value.map((v) => v.trim());\n    //         if (objFinal[row[0]][row[1]][row[2]]) objFinal[row[0]][row[1]][row[2]].Jobs = value;\n    //       }\n    //     }\n    //   });\n    // });\n    setStepsObject(objFinal);\n  };\n  console.log(\"csvArray\", csvArray);\n  // console.log(\"moduleUniqueJobs\", moduleUniqueJobs);\n  console.log(\"stepsObject\", stepsObject);\n  // console.log(\"sendArray\", sendArray);\n  const submit = async () => {\n    const formData = new FormData();\n    formData.append(\"talentProfileFile\", csvFile);\n    formData.append(\"steps\", JSON.stringify(stepsObject));\n    try {\n      const resp = await axios.post(\n        `${process.env.REACT_APP_SERVER_URL}/api/talentProfile/setTalentProfileSteps`,\n        formData\n      );\n      console.log(\"file upload\", resp.data.talentProfileUpload);\n    } catch { }\n  };\n  const upload = () => {\n    main();\n  };\n  return (\n    <>\n      <form id=\"csv-form\" className=\"col-xs-9\">\n        <Container className=\"mt-5\">\n          <Row className=\"justify-content-center mb-3\">\n            <Col sm={10}>\n              <Input\n                name=\"file\"\n                type=\"file\"\n                accept=\".xlsx\"\n                id=\"csvFile\"\n                onClick={(e) => {\n                  setCsvArray([]);\n                }}\n                onChange={(e) => {\n                  setCsvFile(e.target.files[0]);\n                }}\n              />\n              {/* <input\n        type=\"file\"\n      ></input> */}\n              {/* <br /> */}\n            </Col>\n            <Col sm={\"auto\"} className=\"p-0\">\n              <button\n                onClick={(e) => {\n                  e.preventDefault();\n                  if (csvFile) upload();\n                }}\n                style={{ padding: \"5px\" }}\n              >\n                Upload Excel\n              </button>\n            </Col>\n          </Row>\n          {csvArray.length > 0 && (\n            <Row className=\"justify-content-center mb-3\">\n              <Col xs={1}>\n                <button\n                  onClick={(e) => {\n                    e.preventDefault();\n                    submit();\n                  }}\n                  style={{ padding: \"5px\" }}\n                >\n                  Submit\n                </button>\n              </Col>\n            </Row>\n          )}\n        </Container>\n      </form>\n      <br />\n      <br />\n      {csvArray.length > 0 ? (\n        <>\n          <Table bordered striped hover>\n            <thead>\n              <tr className=\"question-header\">\n                {headers.map((h, index) => {\n                  return <th key={index}>{h}</th>;\n                })}\n              </tr>\n            </thead>\n            <tbody>\n              {csvArray.map((item, i) => {\n                return (\n                  <tr key={i}>\n                    {headers.map((h, index) => {\n                      // if (index === 0)\n                      //   return (\n                      //     <td className=\"question-first-col\" key={index}>\n                      //       {item[headers[index]]}\n                      //     </td>\n                      //   );\n                      return index <= 4 ? (\n                        h === \"Product\" ? <td>{item[headers[index]].map(it => it.name)}</td> :\n                          <td>{item[headers[index]]}</td>\n                      ) : null;\n                    })}\n                  </tr>\n                );\n              })}\n            </tbody>\n          </Table>\n        </>\n      ) : null}\n    </>\n  );\n}\n","import { useState } from \"react\";\nimport readXlsxFile from \"read-excel-file\";\nimport axios from \"axios\";\nimport { Table, Input, Container, Row, Col } from \"reactstrap\";\nimport EmployerSteps from '../assets/employerquestion.json'\nexport default function EmployerProfileUpload(props) {\n\n  // const { isheader, isSrNo, answerColumnIndex, headerProps } = props;\n  const [csvFile, setCsvFile] = useState();\n  const [headers, setHeaders] = useState([]);\n\n  const [csvArray, setCsvArray] = useState([]);\n  const [stepsObject, setStepsObject] = useState({});\n  // [{name: \"\", age: 0, rank: \"\"},{name: \"\", age: 0, rank: \"\"}]\n  const main = async () => {\n    const rows = await readXlsxFile(csvFile);\n    setHeaders(rows[0]);\n    processCSV(rows[0], rows.slice(1));\n  };\n\n  const processCSV = (hdrs, rows) => {\n    // let uniqJobs = [...moduleUniqueJobs];\n    const newArray = rows.map((row) => {\n      let module;\n      const eachObject = hdrs.reduce((obj = {}, header, i) => {\n        if (i <= 4) {\n          let value = row[i];\n          if (i === 2) {\n            module = value;\n          }\n          if (header.trim() === \"Job roles\") {\n            // let moduleObj = uniqJobs.find((item) => item.module === module);\n            value = value || \"\";\n            value = value.split(\",\");\n            value = value.map((v) => v.replace(\"\\t\", \"\").trim());\n            // const res = [];\n            // value.forEach((item) => {\n            //   if (!res.includes(item)) res.push(item);\n            // });\n            // value = res;\n          }\n          if (header === \"Product\") {\n            value = value.split(\",\");\n            value = value.map((v) => ({ name: v.trim(), imageUrl: '' }));\n          }\n          obj[header] = value;\n        }\n        return obj;\n      }, {});\n      return eachObject;\n    });\n\n    setCsvArray(newArray);\n    const objFinal = {};\n    let primaryDomain = [];\n    let module = [];\n    let products = [];\n    let jobRoles = [];\n    newArray.forEach((item) => {\n\n      if (Object.keys(objFinal).length === 0 || !objFinal.hasOwnProperty([item[\"Role-Prefix and Product-Suffix\"]])) {\n        objFinal[item[\"Role-Prefix and Product-Suffix\"]] = { [\"Primary Domain\"]: item[\"Primary Domain\"], Modules: { [item[\"Modules\"]]: { Product: item[\"Product\"], [\"Job roles\"]: item[\"Job roles\"] } } };\n        primaryDomain.push({\n          \"value\": item[\"Primary Domain\"],\n          \"selected\": false,\n          \"disable\": false,\n          \"noOfYear\": \"\",\n          \"skill\": \"\"\n        })\n        module.push({\n          \"value\": item[\"Modules\"],\n          \"selected\": false,\n          \"disable\": false,\n          \"noOfYear\": \"\",\n          \"skill\": \"\",\n          \"group\": item[\"Primary Domain\"]\n        })\n        // item[\"Product\"].forEach(prod => {\n        //   products.push({\n        //     \"value\": prod.name,\n        //     \"selected\": false,\n        //     \"disable\": false,\n        //     \"noOfYear\": \"\",\n        //     \"skill\": \"\",\n        //     \"group\": item[\"Modules\"]\n        //   })\n        // })\n        item[\"Job roles\"].forEach(jobrol => {\n          jobRoles.push({\n            \"value\": jobrol,\n            \"selected\": false,\n            \"disable\": false,\n            \"noOfYear\": \"\",\n            \"skill\": \"\",\n            \"subGroup\": item[\"Modules\"],\n            \"group\": item[\"Primary Domain\"]\n          })\n        })\n      }\n      else {\n        objFinal[item[\"Role-Prefix and Product-Suffix\"]][\"Primary Domain\"] = item[\"Primary Domain\"]\n        if (Object.keys(objFinal[item[\"Role-Prefix and Product-Suffix\"]]).length === 0 || !objFinal[item[\"Role-Prefix and Product-Suffix\"]].hasOwnProperty(\"Modules\")) {\n          objFinal[item[\"Role-Prefix and Product-Suffix\"]][\"Modules\"] = { [item[\"Modules\"]]: { Product: item[\"Product\"], [\"Job roles\"]: item[\"Job roles\"] } }\n          module.push({\n            \"value\": item[\"Modules\"],\n            \"selected\": false,\n            \"disable\": false,\n            \"noOfYear\": \"\",\n            \"skill\": \"\",\n            \"group\": item[\"Primary Domain\"]\n          })\n          // item[\"Product\"].forEach(prod => {\n          //   products.push({\n          //     \"value\": prod.name,\n          //     \"selected\": false,\n          //     \"disable\": false,\n          //     \"noOfYear\": \"\",\n          //     \"skill\": \"\",\n          //     \"group\": item[\"Modules\"]\n          //   })\n          // })\n          item[\"Job roles\"].forEach(jobrol => {\n            jobRoles.push({\n              \"value\": jobrol,\n              \"selected\": false,\n              \"disable\": false,\n              \"noOfYear\": \"\",\n              \"skill\": \"\",\n              \"subGroup\": item[\"Modules\"],\n              \"group\": item[\"Primary Domain\"]\n            })\n          })\n        } else {\n          if (!objFinal[item[\"Role-Prefix and Product-Suffix\"]][\"Modules\"].hasOwnProperty(item[\"Modules\"])) {\n            objFinal[item[\"Role-Prefix and Product-Suffix\"]][\"Modules\"][item[\"Modules\"]] = { Product: item[\"Product\"], [\"Job roles\"]: item[\"Job roles\"] }\n          } else {\n            const newProd = item[\"Product\"].filter(pr => objFinal[item[\"Role-Prefix and Product-Suffix\"]][\"Modules\"][item[\"Modules\"]].Product.some(p => p.name === pr.name))\n            objFinal[item[\"Role-Prefix and Product-Suffix\"]][\"Modules\"][item[\"Modules\"]].Product.push(newProd)\n\n            const newJobRoles = item[\"Job roles\"].filter(jr => objFinal[item[\"Role-Prefix and Product-Suffix\"]][\"Modules\"][item[\"Modules\"]][\"Job roles\"].includes(jr))\n          }\n          module.push({\n            \"value\": item[\"Modules\"],\n            \"selected\": false,\n            \"disable\": false,\n            \"noOfYear\": \"\",\n            \"skill\": \"\",\n            \"group\": item[\"Primary Domain\"]\n          })\n          // item[\"Product\"].forEach(prod => {\n          //   products.push({\n          //     \"value\": prod.name,\n          //     \"selected\": false,\n          //     \"disable\": false,\n          //     \"noOfYear\": \"\",\n          //     \"skill\": \"\",\n          //     \"group\": item[\"Modules\"]\n          //   })\n          // })\n          item[\"Job roles\"].forEach(jobrol => {\n            jobRoles.push({\n              \"value\": jobrol,\n              \"selected\": false,\n              \"disable\": false,\n              \"noOfYear\": \"\",\n              \"skill\": \"\",\n              \"subGroup\": item[\"Modules\"],\n              \"group\": item[\"Primary Domain\"]\n            })\n          })\n        }\n\n      }\n    })\n    console.log(\"objFinal\", objFinal)\n\n    EmployerSteps[1].option = primaryDomain\n    EmployerSteps[2].option = module\n    EmployerSteps[3].option = jobRoles\n    // EmployerSteps[5].option = products\n    console.log(\"EmployerSteps\", EmployerSteps)\n    // objFinal = {};\n    // rows.forEach((row) => {\n    //   hdrs.forEach((header, i) => {\n    //     debugger;\n    //     if (i <= 4) {\n    //       if (i === 0) {\n    //         if (!objFinal[row[0]]) objFinal[row[0]] = {};\n    //       }\n    //       if (i === 1) {\n    //         if (\n    //           Object.keys(objFinal[row[0]]).length === 0\n    //           //  ||\n    //           // (objFinal[row[0]].keys && !objFinal[row[0]][row[1]])\n    //         ) {\n    //           objFinal[row[0]][row[1]] = {};\n    //         }\n    //       }\n    //       if (i === 2) {\n    //         if (objFinal[row[0]][row[1]]) {\n    //           if (\n    //             Object.keys(objFinal[row[0]][row[1]]).length === 0 ||\n    //             (objFinal[row[0]][row[1]].keys && !objFinal[row[0]][row[1]][row[2]])\n    //           ) {\n    //             objFinal[row[0]][row[1]][row[2]] = {};\n    //           }\n    //         }\n\n    //       }\n    //       if (header === \"Product\" && objFinal[row[0]][row[1]] && objFinal[row[0]][row[1]][row[2]]) {\n    //         let value = row[i];\n    //         value = value.split(\",\");\n    //         value = value.map((v) => ({ name: v.trim(), imageUrl: '' }));\n    //         debugger;\n    //         if (objFinal[row[0]][row[1]][row[2]])\n    //           objFinal[row[0]][row[1]][row[2]].Product = value;\n    //       }\n    //       if (header.trim() === \"Job roles\" && objFinal[row[0]][row[1]] && objFinal[row[0]][row[1]][row[2]]) {\n    //         let value = row[i] || \"\";\n    //         value = value.split(\",\");\n    //         value = value.map((v) => v.trim());\n    //         if (objFinal[row[0]][row[1]][row[2]]) objFinal[row[0]][row[1]][row[2]].Jobs = value;\n    //       }\n    //     }\n    //   });\n    // });\n    setStepsObject(EmployerSteps);\n  };\n  console.log(\"csvArray\", csvArray);\n  // console.log(\"moduleUniqueJobs\", moduleUniqueJobs);\n  console.log(\"stepsObject\", stepsObject);\n  // console.log(\"sendArray\", sendArray);\n  const submit = async () => {\n    const formData = new FormData();\n    formData.append(\"employerProfileFile\", csvFile);\n    formData.append(\"steps\", JSON.stringify(stepsObject));\n    try {\n      const resp = await axios.post(\n        `${process.env.REACT_APP_SERVER_URL}/api/employerProfile/setEmployerProfileSteps`,\n        formData\n      );\n      console.log(\"file upload\", resp.data.talentProfileUpload);\n    } catch { }\n  };\n  const upload = () => {\n    main();\n  };\n  return (\n    <>\n      <form id=\"csv-form\" className=\"col-xs-9\">\n        <Container className=\"mt-5\">\n          <Row className=\"justify-content-center mb-3\">\n            <Col sm={10}>\n              <Input\n                name=\"file\"\n                type=\"file\"\n                accept=\".xlsx\"\n                id=\"csvFile\"\n                onClick={(e) => {\n                  setCsvArray([]);\n                }}\n                onChange={(e) => {\n                  setCsvFile(e.target.files[0]);\n                }}\n              />\n              {/* <input\n        type=\"file\"\n      ></input> */}\n              {/* <br /> */}\n            </Col>\n            <Col sm={\"auto\"} className=\"p-0\">\n              <button\n                onClick={(e) => {\n                  e.preventDefault();\n                  if (csvFile) upload();\n                }}\n                style={{ padding: \"5px\" }}\n              >\n                Upload Excel\n              </button>\n            </Col>\n          </Row>\n          {csvArray.length > 0 && (\n            <Row className=\"justify-content-center mb-3\">\n              <Col xs={1}>\n                <button\n                  onClick={(e) => {\n                    e.preventDefault();\n                    submit();\n                  }}\n                  style={{ padding: \"5px\" }}\n                >\n                  Submit\n                </button>\n              </Col>\n            </Row>\n          )}\n        </Container>\n      </form>\n      <br />\n      <br />\n      {csvArray.length > 0 ? (\n        <>\n          <Table bordered striped hover>\n            <thead>\n              <tr className=\"question-header\">\n                {headers.map((h, index) => {\n                  return <th key={index}>{h}</th>;\n                })}\n              </tr>\n            </thead>\n            <tbody>\n              {csvArray.map((item, i) => {\n                return (\n                  <tr key={i}>\n                    {headers.map((h, index) => {\n                      // if (index === 0)\n                      //   return (\n                      //     <td className=\"question-first-col\" key={index}>\n                      //       {item[headers[index]]}\n                      //     </td>\n                      //   );\n                      return index <= 4 ? (\n                        h === \"Product\" ? <td>{item[headers[index]].map(it => it.name)}</td> :\n                          <td>{item[headers[index]]}</td>\n                      ) : null;\n                    })}\n                  </tr>\n                );\n              })}\n            </tbody>\n          </Table>\n        </>\n      ) : null}\n    </>\n  );\n}\n","import React from \"react\";\nimport { NavLink, Link } from \"react-router-dom\";\nconst Navigation = () => {\n  let activeStyle = {\n    textDecoration: \"none\",\n    color: \"rgba(0,0,0,1)\",\n    fontWeight: \"bold\",\n  };\n  let inactiveStyle = {\n    textDecoration: \"none\",\n    color: \"rgba(0,0,0,.5)\",\n  };\n  let activeClassName = \"underline\";\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n      <div className=\"container-fluid\">\n        {/* <a className=\"navbar-brand\" href=\"#\"> */}\n        <Link className=\"nav-link navbar-brand\" to=\"/\">\n          EAS Admin\n        </Link>\n        {/* </a> */}\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-bs-toggle=\"collapse\"\n          data-bs-target=\"#navbarNav\"\n          aria-controls=\"navbarNav\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n          <ul className=\"navbar-nav\">\n            <li className=\"nav-item\">\n              {/* <a className=\"nav-link\" href=\"#\"> */}\n              <NavLink\n                to=\"/question\"\n                className=\"nav-link\"\n                style={({ isActive }) => {\n                  console.log(\"active\", isActive);\n                  return isActive ? activeStyle : inactiveStyle;\n                }}\n              >\n                Questions\n              </NavLink>\n              {/* <Link className=\"nav-link\" to=\"/question\">\n                Questions\n              </Link> */}\n              {/* </a> */}\n            </li>\n            <li className=\"nav-item\">\n              {/* <a className=\"nav-link\" href=\"#\"> */}\n              <NavLink\n                to=\"/talent\"\n                className=\"nav-link\"\n                style={({ isActive }) => {\n                  console.log(\"active\", isActive);\n                  return isActive ? activeStyle : inactiveStyle;\n                }}\n              >\n                Talent\n              </NavLink>\n              {/* <Link className=\"nav-link\" to=\"/talent\">\n                Talent\n              </Link> */}\n              {/* </a> */}\n            </li>\n            <li className=\"nav-item\">\n              {/* <a className=\"nav-link\" href=\"#\"> */}\n              <NavLink\n                to=\"/employer\"\n                className=\"nav-link\"\n                style={({ isActive }) => {\n                  console.log(\"active\", isActive);\n                  return isActive ? activeStyle : inactiveStyle;\n                }}\n              >\n                Employer\n              </NavLink>\n              {/* <Link className=\"nav-link\" to=\"/employer\">\n                Employer\n              </Link> */}\n              {/* </a> */}\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default Navigation;\n","import QuestionAnswersCSVUpload from \"./components/QuestionAnswersCSVUpload\";\nimport TalentProfileUpload from \"./components/TalentProfileUpload\";\nimport EmployerProfileUpload from \"./components/EmployerProfileUpload\";\nimport Navigation from \"./components/Navigation\";\nimport \"./App.css\";\nimport { Routes, Route, Link } from \"react-router-dom\";\n// import \"bootstrap/dist/js/bootstrap.bundle\";\n// import \"bootstrap/dist/css/bootstrap.css\";\nconsole.log(\"REACT_APP_SERVER_URL\", process.env.REACT_APP_SERVER_URL);\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Navigation />\n      <Routes>\n        <Route path=\"/\" element={<div></div>} />\n        <Route path=\"/employer\" element={<EmployerProfileUpload />} />\n        <Route path=\"/talent\" element={<TalentProfileUpload />} />\n        <Route path=\"/question\" element={<QuestionAnswersCSVUpload />} />\n      </Routes>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"bootstrap/dist/js/bootstrap.bundle\";\nimport { BrowserRouter } from \"react-router-dom\";\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}