{"version":3,"sources":["components/TalentProfileUpload.js","App.js","index.js"],"names":["TalentProfileUpload","props","useState","csvFile","setCsvFile","headers","setHeaders","secSkillUniqueJobs","setSecSkillUniqueJobs","csvArray","setCsvArray","stepsObject","setStepsObject","main","a","readXlsxFile","rows","processCSV","slice","hdrs","uniqJobs","newArray","map","row","secSkill","eachObject","reduce","obj","header","i","value","secSkillObj","find","item","split","v","replace","trim","res","forEach","includes","push","length","jobs","founduniqueJob","some","objFinal","Object","keys","jobItem","console","log","submit","formData","FormData","append","JSON","stringify","axios","post","process","resp","data","talentProfileUpload","id","className","sm","name","type","accept","onClick","e","onChange","target","files","preventDefault","style","padding","xs","bordered","striped","hover","h","index","App","ReactDOM","render","document","getElementById"],"mappings":"sSAKe,SAASA,EAAoBC,GAE1C,MAA8BC,qBAA9B,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA8BF,mBAAS,IAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAAoDJ,mBAAS,IAA7D,mBAAOK,EAAP,KAA2BC,EAA3B,KACA,EAAgCN,mBAAS,IAAzC,mBAAOO,EAAP,KAAiBC,EAAjB,KACA,EAAsCR,mBAAS,IAA/C,mBAAOS,EAAP,KAAoBC,EAApB,KAEMC,EAAI,uCAAG,4BAAAC,EAAA,sEACQC,YAAaZ,GADrB,OACLa,EADK,OAEXV,EAAWU,EAAK,IAChBC,EAAWD,EAAK,GAAIA,EAAKE,MAAM,IAHpB,2CAAH,qDAMJD,EAAa,SAACE,EAAMH,GACxB,IAAII,EAAQ,YAAOb,GACbc,EAAWL,EAAKM,KAAI,SAACC,GACzB,IAAIC,EACEC,EAAaN,EAAKO,QAAO,WAA0B,IAAzBC,EAAwB,uDAAlB,GAAIC,EAAc,uCAANC,EAAM,uCACtD,GAAIA,GAAK,EAAG,CACV,IAAIC,EAAQP,EAAIM,GAIhB,GAHU,IAANA,IACFL,EAAWM,GAEE,SAAXF,EAAmB,CACrB,IAAIG,EAAcX,EAASY,MACzB,SAACC,GAAD,OAAUA,EAAKT,WAAaA,KAI9BM,GADAA,GADAA,EAAQA,GAAS,IACHI,MAAM,MACNZ,KAAI,SAACa,GAAD,OAAOA,EAAEC,QAAQ,KAAM,IAAIC,UAC7C,IAAMC,EAAM,GAMZ,GALAR,EAAMS,SAAQ,SAACN,GACRK,EAAIE,SAASP,IAAOK,EAAIG,KAAKR,OAEpCH,EAAQQ,GAEEI,OAAS,EACjB,GAAIX,EAAa,CACf,IAAMO,EAAM,GACZP,EAAYY,KAAKJ,SAAQ,SAACN,GACnBK,EAAIE,SAASP,IAAOK,EAAIG,KAAKR,MAEpCF,EAAYY,KAAOL,OAEnBP,EAAc,CAAEP,WAAUmB,KAAK,YAAKb,IAGxC,IAAMc,EAAiBxB,EAASyB,MAC9B,SAACZ,GAAD,OAAUA,EAAKT,WAAaA,KAGzBoB,GACHxB,EAASqB,KAAKV,GAGhBX,EAAWA,EAASE,KAAI,SAACW,GAEvB,OAAIA,EAAKT,WAAaA,EACbO,EAEAE,KAIE,iBAAXL,IAEFE,GADAA,EAAQA,EAAMI,MAAM,MACNZ,KAAI,SAACa,GAAD,OAAOA,EAAEE,WAE7BV,EAAIC,GAAUE,EAEhB,OAAOH,IACN,IACH,OAAOF,KAETjB,EAAsBY,GAEtBV,EAAYW,GACZ,IAAMyB,EAAW,GACjB9B,EAAKuB,SAAQ,SAAChB,GACZJ,EAAKoB,SAAQ,SAACX,EAAQC,GAEpB,GAAIA,GAAK,EAAG,CACV,GAAU,IAANA,EAAS,CACX,IAAIC,EAAQP,EAAI,GAGJ,OAAVO,GACkC,IAAjCiB,OAAOC,KAAKF,GAAUJ,QAAiBI,EAAShB,KAGjDgB,EAAShB,GAAS,IAGtB,GAAU,IAAND,EAAS,CACX,IAAMoB,EAAU7B,EAASY,MAAK,SAACC,GAAD,OAAUA,EAAKT,WAAaD,EAAI,MACxDI,EAAM,GACRsB,IACFtB,EAAIgB,KAAOM,EAAQN,MAEN,OAAXpB,EAAI,GAEHuB,EAASvB,EAAI,IAAIA,EAAI,KACmB,IAAzCwB,OAAOC,KAAKF,EAASvB,EAAI,KAAKmB,SAE9BI,EAASvB,EAAI,IAAIA,EAAI,IAAMI,GAGxBmB,EAASvB,EAAI,MAAKuB,EAASvB,EAAI,IAAMI,GAyB9C,GAtBU,IAANE,IACa,OAAXN,EAAI,GAEHuB,EAASvB,EAAI,IAAIA,EAAI,IAAIA,EAAI,KACmB,IAAjDwB,OAAOC,KAAKF,EAASvB,EAAI,IAAIA,EAAI,KAAKmB,SAOtCI,EAASvB,EAAI,IAAIA,EAAI,IAAIA,EAAI,IAAM,KAIM,IAAzCwB,OAAOC,KAAKF,EAASvB,EAAI,KAAKmB,QAC7BI,EAASvB,EAAI,IAAIyB,OAASF,EAASvB,EAAI,IAAIA,EAAI,OAEhDuB,EAASvB,EAAI,IAAIA,EAAI,IAAM,KAIlB,iBAAXK,EAA2B,CAC7B,IAAIE,EAAQP,EAAIM,GAEhBC,GADAA,EAAQA,EAAMI,MAAM,MACNZ,KAAI,SAACa,GAAD,OAAOA,EAAEE,UAEZ,OAAXd,EAAI,GACNuB,EAASvB,EAAI,IAAIA,EAAI,IAAIA,EAAI,IAAMO,EAEnCgB,EAASvB,EAAI,IAAIA,EAAI,IAAMO,UAMrClB,EAAekC,IAEjBI,QAAQC,IAAI,WAAY1C,GACxByC,QAAQC,IAAI,qBAAsB5C,GAClC2C,QAAQC,IAAI,cAAexC,GAE3B,IAAMyC,EAAM,uCAAG,8BAAAtC,EAAA,6DACPuC,EAAW,IAAIC,UACZC,OAAO,oBAAqBpD,GACrCkD,EAASE,OAAO,QAASC,KAAKC,UAAU9C,IAH3B,kBAKQ+C,IAAMC,KAAN,UACdC,kCADc,4CAEjBP,GAPS,OAKLQ,EALK,OASXX,QAAQC,IAAI,cAAeU,EAAKC,KAAKC,qBAT1B,4GAAH,qDAeZ,OACE,qCACE,sBAAMC,GAAG,WAAWC,UAAU,WAA9B,SACE,eAAC,IAAD,CAAWA,UAAU,OAArB,UACE,eAAC,IAAD,CAAKA,UAAU,8BAAf,UACE,cAAC,IAAD,CAAKC,GAAI,GAAT,SACE,cAAC,IAAD,CACEC,KAAK,OACLC,KAAK,OACLC,OAAO,QACPL,GAAG,UACHM,QAAS,SAACC,GACR7D,EAAY,KAEd8D,SAAU,SAACD,GACTnE,EAAWmE,EAAEE,OAAOC,MAAM,SAQhC,cAAC,IAAD,CAAKR,GAAI,OAAQD,UAAU,MAA3B,SACE,wBACEK,QAAS,SAACC,GACRA,EAAEI,iBACExE,GA7BlBU,KA+BY+D,MAAO,CAAEC,QAAS,OALpB,+BAWHpE,EAASiC,OAAS,GACjB,cAAC,IAAD,CAAKuB,UAAU,8BAAf,SACE,cAAC,IAAD,CAAKa,GAAI,EAAT,SACE,wBACER,QAAS,SAACC,GACRA,EAAEI,iBACFvB,KAEFwB,MAAO,CAAEC,QAAS,OALpB,6BAcV,uBACA,uBACCpE,EAASiC,OAAS,EACjB,mCACE,eAAC,IAAD,CAAOqC,UAAQ,EAACC,SAAO,EAACC,OAAK,EAA7B,UACE,gCACE,oBAAIhB,UAAU,kBAAd,SACG5D,EAAQiB,KAAI,SAAC4D,EAAGC,GACf,OAAO,6BAAiBD,GAARC,UAItB,gCACG1E,EAASa,KAAI,SAACW,EAAMJ,GACnB,OACE,6BACGxB,EAAQiB,KAAI,SAAC4D,EAAGC,GAOf,OAAOA,GAAS,EACd,6BAAKlD,EAAK5B,EAAQ8E,MAChB,SAVCtD,aAkBjB,Q,MC/PVqB,QAAQC,IAAI,uBAAwBS,mCASrBwB,MARf,WACE,OACE,qBAAKnB,UAAU,MAAf,SACE,cAACjE,EAAD,O,MCANqF,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.dc357f54.chunk.js","sourcesContent":["import { useRef, useState, useCallback } from \"react\";\nimport readXlsxFile from \"read-excel-file\";\nimport ReactTags from \"react-tag-autocomplete\";\nimport axios from \"axios\";\nimport { Table, Input, Container, Row, Col } from \"reactstrap\";\nexport default function TalentProfileUpload(props) {\n  // const { isheader, isSrNo, answerColumnIndex, headerProps } = props;\n  const [csvFile, setCsvFile] = useState();\n  const [headers, setHeaders] = useState([]);\n  const [secSkillUniqueJobs, setSecSkillUniqueJobs] = useState([]);\n  const [csvArray, setCsvArray] = useState([]);\n  const [stepsObject, setStepsObject] = useState({});\n  // [{name: \"\", age: 0, rank: \"\"},{name: \"\", age: 0, rank: \"\"}]\n  const main = async () => {\n    const rows = await readXlsxFile(csvFile);\n    setHeaders(rows[0]);\n    processCSV(rows[0], rows.slice(1));\n  };\n\n  const processCSV = (hdrs, rows) => {\n    let uniqJobs = [...secSkillUniqueJobs];\n    const newArray = rows.map((row) => {\n      let secSkill;\n      const eachObject = hdrs.reduce((obj = {}, header, i) => {\n        if (i <= 5) {\n          let value = row[i];\n          if (i === 1) {\n            secSkill = value;\n          }\n          if (header === \"Jobs\") {\n            let secSkillObj = uniqJobs.find(\n              (item) => item.secSkill === secSkill\n            );\n            value = value || \"\";\n            value = value.split(\",\");\n            value = value.map((v) => v.replace(\"\\t\", \"\").trim());\n            const res = [];\n            value.forEach((item) => {\n              if (!res.includes(item)) res.push(item);\n            });\n            value = res;\n\n            if (value.length > 0) {\n              if (secSkillObj) {\n                const res = [];\n                secSkillObj.jobs.forEach((item) => {\n                  if (!res.includes(item)) res.push(item);\n                });\n                secSkillObj.jobs = res;\n              } else {\n                secSkillObj = { secSkill, jobs: [...value] };\n              }\n            }\n            const founduniqueJob = uniqJobs.some(\n              (item) => item.secSkill === secSkill\n            );\n\n            if (!founduniqueJob) {\n              uniqJobs.push(secSkillObj);\n            }\n\n            uniqJobs = uniqJobs.map((item) => {\n              debugger;\n              if (item.secSkill === secSkill) {\n                return secSkillObj;\n              } else {\n                return item;\n              }\n            });\n          }\n          if (header === \"Top Products\") {\n            value = value.split(\",\");\n            value = value.map((v) => v.trim());\n          }\n          obj[header] = value;\n        }\n        return obj;\n      }, {});\n      return eachObject;\n    });\n    setSecSkillUniqueJobs(uniqJobs);\n\n    setCsvArray(newArray);\n    const objFinal = {};\n    rows.forEach((row) => {\n      hdrs.forEach((header, i) => {\n        // debugger;\n        if (i <= 5) {\n          if (i === 0) {\n            let value = row[0];\n            // if (value !== null) debugger;\n            if (\n              value !== null &&\n              (Object.keys(objFinal).length === 0 || !objFinal[value])\n            ) {\n              // debugger;\n              objFinal[value] = {};\n            }\n          }\n          if (i === 1) {\n            const jobItem = uniqJobs.find((item) => item.secSkill === row[1]);\n            const obj = {};\n            if (jobItem) {\n              obj.jobs = jobItem.jobs;\n            }\n            if (row[0] !== null) {\n              if (\n                !objFinal[row[0]][row[1]] ||\n                Object.keys(objFinal[row[0]]).length === 0\n              ) {\n                objFinal[row[0]][row[1]] = obj;\n              }\n            } else {\n              if (!objFinal[row[1]]) objFinal[row[1]] = obj;\n            }\n          }\n          if (i === 2) {\n            if (row[0] !== null) {\n              if (\n                !objFinal[row[0]][row[1]][row[2]] ||\n                Object.keys(objFinal[row[0]][row[1]]).length === 0\n              ) {\n                // if (\n                //   Object.keys(objFinal[row[0]][row[1]]).length === 0 ||\n                //   (Object.keys(objFinal[row[0]][row[1]]).length > 0 &&\n                //     !objFinal[row[0]][row[1]][row[2]])\n                // ) {\n                objFinal[row[0]][row[1]][row[2]] = {};\n              }\n            } else {\n              if (\n                Object.keys(objFinal[row[1]]).length === 0 ||\n                (objFinal[row[1]].keys && !objFinal[row[1]][row[2]])\n              ) {\n                objFinal[row[1]][row[2]] = {};\n              }\n            }\n          }\n          if (header === \"Top Products\") {\n            let value = row[i];\n            value = value.split(\",\");\n            value = value.map((v) => v.trim());\n\n            if (row[0] !== null) {\n              objFinal[row[0]][row[1]][row[2]] = value;\n            } else {\n              objFinal[row[1]][row[2]] = value;\n            }\n          }\n        }\n      });\n    });\n    setStepsObject(objFinal);\n  };\n  console.log(\"csvArray\", csvArray);\n  console.log(\"secSkillUniqueJobs\", secSkillUniqueJobs);\n  console.log(\"stepsObject\", stepsObject);\n  // console.log(\"sendArray\", sendArray);\n  const submit = async () => {\n    const formData = new FormData();\n    formData.append(\"talentProfileFile\", csvFile);\n    formData.append(\"steps\", JSON.stringify(stepsObject));\n    try {\n      const resp = await axios.post(\n        `${process.env.REACT_APP_SERVER_URL}/api/talentProfile/setTalentProfileSteps`,\n        formData\n      );\n      console.log(\"file upload\", resp.data.talentProfileUpload);\n    } catch {}\n  };\n  const upload = () => {\n    main();\n  };\n  return (\n    <>\n      <form id=\"csv-form\" className=\"col-xs-9\">\n        <Container className=\"mt-5\">\n          <Row className=\"justify-content-center mb-3\">\n            <Col sm={10}>\n              <Input\n                name=\"file\"\n                type=\"file\"\n                accept=\".xlsx\"\n                id=\"csvFile\"\n                onClick={(e) => {\n                  setCsvArray([]);\n                }}\n                onChange={(e) => {\n                  setCsvFile(e.target.files[0]);\n                }}\n              />\n              {/* <input\n        type=\"file\"\n      ></input> */}\n              {/* <br /> */}\n            </Col>\n            <Col sm={\"auto\"} className=\"p-0\">\n              <button\n                onClick={(e) => {\n                  e.preventDefault();\n                  if (csvFile) upload();\n                }}\n                style={{ padding: \"5px\" }}\n              >\n                Upload Excel\n              </button>\n            </Col>\n          </Row>\n          {csvArray.length > 0 && (\n            <Row className=\"justify-content-center mb-3\">\n              <Col xs={1}>\n                <button\n                  onClick={(e) => {\n                    e.preventDefault();\n                    submit();\n                  }}\n                  style={{ padding: \"5px\" }}\n                >\n                  Submit\n                </button>\n              </Col>\n            </Row>\n          )}\n        </Container>\n      </form>\n      <br />\n      <br />\n      {csvArray.length > 0 ? (\n        <>\n          <Table bordered striped hover>\n            <thead>\n              <tr className=\"question-header\">\n                {headers.map((h, index) => {\n                  return <th key={index}>{h}</th>;\n                })}\n              </tr>\n            </thead>\n            <tbody>\n              {csvArray.map((item, i) => {\n                return (\n                  <tr key={i}>\n                    {headers.map((h, index) => {\n                      // if (index === 0)\n                      //   return (\n                      //     <td className=\"question-first-col\" key={index}>\n                      //       {item[headers[index]]}\n                      //     </td>\n                      //   );\n                      return index <= 3 ? (\n                        <td>{item[headers[index]]}</td>\n                      ) : null;\n                    })}\n                  </tr>\n                );\n              })}\n            </tbody>\n          </Table>\n        </>\n      ) : null}\n    </>\n  );\n}\n","import QuestionAnswersCSVUpload from \"./components/QuestionAnswersCSVUpload\";\nimport TalentProfileUpload from \"./components/TalentProfileUpload\";\nimport \"./App.css\";\nconsole.log(\"REACT_APP_SERVER_URL\", process.env.REACT_APP_SERVER_URL);\nfunction App() {\n  return (\n    <div className=\"App\">\n      <TalentProfileUpload />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}