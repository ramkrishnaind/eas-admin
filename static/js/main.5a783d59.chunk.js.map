{"version":3,"sources":["components/QuestionAnswersCSVUpload.js","App.js","index.js"],"names":["CSVReader","props","useState","csvFile","setCsvFile","headers","setHeaders","csvArray","setCsvArray","options","setOptions","tagsList","setTagsList","tags","setTags","mainTags","setMainTags","reactTags","useRef","main","a","readXlsxFile","rows","console","log","opt","forEach","el","toLowerCase","includes","push","replace","processCSV","slice","onDelete","useCallback","i","tagIndex","prevTags","filter","_","onAddition","newTag","prevTagsList","some","s","name","length","onDeleteMain","onAdditionMain","hdrs","newArray","map","row","eachObject","reduce","obj","header","value","split","v","trim","single","tagsArr","item","index","Tags","tagsArray","it","id","tagsSuggestionsArr","t","className","sm","type","accept","onClick","e","onChange","target","files","preventDefault","ref","minQueryLength","allowNew","suggestions","bordered","striped","hover","h","bind","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5a783d59.chunk.js","sourcesContent":["import { useRef, useState, useCallback } from \"react\";\r\nimport readXlsxFile from \"read-excel-file\";\r\nimport ReactTags from \"react-tag-autocomplete\";\r\nimport { Table, Input, Container, Row, Col } from \"reactstrap\";\r\nexport default function CSVReader(props) {\r\n  // const { isheader, isSrNo, answerColumnIndex, headerProps } = props;\r\n  const [csvFile, setCsvFile] = useState();\r\n  const [headers, setHeaders] = useState([]);\r\n  const [csvArray, setCsvArray] = useState([]);\r\n  const [options, setOptions] = useState([]);\r\n  const [tagsList, setTagsList] = useState([]);\r\n  const [tags, setTags] = useState();\r\n  const [mainTags, setMainTags] = useState();\r\n  const reactTags = useRef();\r\n  // [{name: \"\", age: 0, rank: \"\"},{name: \"\", age: 0, rank: \"\"}]\r\n  const main = async () => {\r\n    const rows = await readXlsxFile(csvFile);\r\n    console.log(\"** Done **\", rows);\r\n    setHeaders(rows[0]);\r\n    const opt = [];\r\n    rows[0].forEach((el) => {\r\n      el = el || \"\";\r\n      if (el.toLowerCase().includes(\"option \")) {\r\n        opt.push(el.toLowerCase().replace(\"option \", \"\").toLowerCase());\r\n      }\r\n    });\r\n    setOptions(opt);\r\n    processCSV(rows[0], rows.slice(1));\r\n  };\r\n  const onDelete = useCallback(\r\n    (i, tagIndex) => {\r\n      const prevTags = tags ? { ...tags } : {};\r\n      prevTags[i] = prevTags[i].filter((_, i) => i !== tagIndex);\r\n      setTags(prevTags);\r\n    },\r\n    [tags]\r\n  );\r\n\r\n  const onAddition = useCallback(\r\n    (i, newTag) => {\r\n      const prevTags = tags ? { ...tags } : {};\r\n      const prevTagsList = [...tagsList];\r\n      if (\r\n        !prevTagsList.some(\r\n          (s) => s.name.toLowerCase() === newTag.name.toLowerCase()\r\n        )\r\n      ) {\r\n        prevTagsList[prevTagsList.length] = newTag;\r\n        setTagsList(prevTagsList);\r\n      }\r\n      if (\r\n        prevTags[i].some(\r\n          (s) => s.name.toLowerCase() === newTag.name.toLowerCase()\r\n        )\r\n      )\r\n        return;\r\n      prevTags[i] = [...prevTags[i], newTag];\r\n      setTags(prevTags);\r\n    },\r\n    [tags]\r\n  );\r\n  const onDeleteMain = useCallback(\r\n    (tagIndex) => {\r\n      const prevTags = mainTags ? [...mainTags] : [];\r\n      prevTags = prevTags.filter((_, i) => i !== tagIndex);\r\n      setMainTags(prevTags);\r\n    },\r\n    [tags]\r\n  );\r\n\r\n  const onAdditionMain = useCallback(\r\n    (newTag) => {\r\n      let prevTags = mainTags ? [...mainTags] : [];\r\n      const prevTagsList = [...tagsList];\r\n      if (\r\n        !prevTagsList.some(\r\n          (s) => s.name.toLowerCase() === newTag.name.toLowerCase()\r\n        )\r\n      ) {\r\n        prevTagsList[prevTagsList.length] = newTag;\r\n        setTagsList(prevTagsList);\r\n      }\r\n      if (\r\n        prevTags.some((s) => s.name.toLowerCase() === newTag.name.toLowerCase())\r\n      )\r\n        return;\r\n      prevTags = [...prevTags, newTag];\r\n      setMainTags(prevTags);\r\n    },\r\n    [mainTags]\r\n  );\r\n  const processCSV = (hdrs, rows) => {\r\n    const newArray = rows.map((row) => {\r\n      const eachObject = hdrs.reduce((obj = {}, header, i) => {\r\n        let value = row[i];\r\n        if (header === \"Answers\") {\r\n          value = value.split(\",\");\r\n          value = value.map((v) => v.trim());\r\n          obj.single = value.length === 1;\r\n        }\r\n        if (header === \"Tags\" && value) {\r\n          value = value.split(\",\");\r\n          value = value.map((v) => v.trim());\r\n        }\r\n        obj[header] = value;\r\n\r\n        // obj[header] = values[i].slice(0, values[i].indexOf(\"\\r\"));\r\n        return obj;\r\n      }, {});\r\n      return eachObject;\r\n    });\r\n    setCsvArray(newArray);\r\n    const tagsArr = {};\r\n    newArray.map((item, index) => {\r\n      if (item && item.Tags) {\r\n        const tagsArray = item.Tags.map((it, i) => {\r\n          return { id: i, name: it };\r\n        });\r\n        tagsArr[index] = tagsArray;\r\n      } else {\r\n        tagsArr[index] = [];\r\n      }\r\n    });\r\n    const tagsSuggestionsArr = [];\r\n    newArray.forEach((item, index) => {\r\n      if (item.Tags && item.Tags.length > 0) {\r\n        item.Tags.forEach((t) => {\r\n          if (!tagsSuggestionsArr.some((it) => it.name === t)) {\r\n            tagsSuggestionsArr.push({ id: tagsSuggestionsArr.length, name: t });\r\n          }\r\n        });\r\n      }\r\n    });\r\n    setTagsList(tagsSuggestionsArr);\r\n    setMainTags(tagsSuggestionsArr);\r\n    setTags(tagsArr);\r\n  };\r\n  console.log(\"tagsList\", tagsList);\r\n  console.log(\"tags\", tags);\r\n  const submit = () => {\r\n    main();\r\n    // const file = csvFile;\r\n    // const reader = new FileReader();\r\n\r\n    // reader.onload = function (e) {\r\n    //   const text = e.target.result;\r\n    //   console.log(text);\r\n    //   processCSV(text, \";\");\r\n    // };\r\n\r\n    // reader.readAsText(file);\r\n  };\r\n  console.log(headers);\r\n  console.log(\"csvArray\", csvArray);\r\n  console.log(csvArray.length > 0);\r\n  console.log(\"options\", options);\r\n  return (\r\n    <>\r\n      <form id=\"csv-form\" className=\"col-xs-9\">\r\n        <Container className=\"mt-5\">\r\n          <Row>\r\n            <Col sm={11}>\r\n              <Input\r\n                name=\"file\"\r\n                type=\"file\"\r\n                accept=\".xlsx\"\r\n                id=\"csvFile\"\r\n                onClick={(e) => setCsvArray([])}\r\n                onChange={(e) => {\r\n                  setCsvFile(e.target.files[0]);\r\n                }}\r\n              />\r\n              {/* <input\r\n        type=\"file\"\r\n      ></input> */}\r\n              {/* <br /> */}\r\n            </Col>\r\n            <Col sm={1}>\r\n              <button\r\n                onClick={(e) => {\r\n                  e.preventDefault();\r\n                  if (csvFile) submit();\r\n                }}\r\n                className=\"col-xs-2\"\r\n              >\r\n                Submit\r\n              </button>\r\n            </Col>\r\n          </Row>\r\n          {tagsList && tagsList.length > 0 && (\r\n            <Row>\r\n              <ReactTags\r\n                ref={reactTags}\r\n                minQueryLength={1}\r\n                tags={mainTags ? mainTags : []}\r\n                allowNew\r\n                suggestions={tagsList || []}\r\n                onDelete={onDeleteMain}\r\n                onAddition={onAdditionMain}\r\n              />\r\n            </Row>\r\n          )}\r\n        </Container>\r\n      </form>\r\n      <br />\r\n      <br />\r\n      {csvArray.length > 0 ? (\r\n        <>\r\n          <Table bordered striped hover>\r\n            <thead>\r\n              <tr className=\"question-header\">\r\n                {headers.map((h, index) => {\r\n                  return <th>{h}</th>;\r\n                })}\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {csvArray.map((item, i) => {\r\n                return (\r\n                  <tr key={i}>\r\n                    {headers.map((h, index) => {\r\n                      if (index === 0)\r\n                        return (\r\n                          <td className=\"question-first-col\">\r\n                            {item[headers[index]]}\r\n                          </td>\r\n                        );\r\n                      if (h === \"Tags\") {\r\n                        return (\r\n                          <td>\r\n                            <ReactTags\r\n                              ref={reactTags}\r\n                              minQueryLength={1}\r\n                              tags={tags ? tags[i] : []}\r\n                              allowNew\r\n                              suggestions={tagsList || []}\r\n                              onDelete={onDelete.bind(null, i)}\r\n                              onAddition={onAddition.bind(null, i)}\r\n                            />\r\n                          </td>\r\n                        );\r\n                      } else return <td>{item[headers[index]]}</td>;\r\n                    })}\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </Table>\r\n        </>\r\n      ) : null}\r\n    </>\r\n  );\r\n}\r\n","import QuestionAnswersCSVUpload from \"./components/QuestionAnswersCSVUpload\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <QuestionAnswersCSVUpload />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}